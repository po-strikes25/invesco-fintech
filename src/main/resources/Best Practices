Null Checks
Validations
Try-catch
Throw Error
Exceptions

ISSUES FACED:
- LOMBOK ANNOTATIONS FOR GETTERS AND SETTERS DID NOT WORK, TRIED REBUILDING PROJECT MANY TIMES

- USING SPRING SECURITY WITHOUT DISABLING CSRF CAN CAUSE CSRF TOKEN ISSUE -
USUALLY FOR PUT/POST/DELETE TYPE REQUESTS AS THESE CHANGE THE DATA

- CSRF ISSUE WON'T HAPPEN FOR GET, HEAD, OPTIONS TYPE REQUESTS

- BETTER TO ALWAYS DISABLE THE CSRF CONFIGURATION AS APIs ARE TYPICALLY STATELESS

- POSTMAN AND OTHER TOOLS DON'T AUTOMATICALLY HANDLE CSRF TOKENS

- CSRF TOKEN IS DEFAULT BEHAVIOUR NOT A BUG

- USE REQUIRED ARGS CONSTRUCTOR WITH FINAL KEYWORD TO INJECT THE SERVICE AND REPOSITORY
INSTANCES ELSE THE CONSTRUCTOR WON'T BE CALLED

- FACING ERROR IN CASE WHERE TABLE IS CREATED BUT I HAVE REMOVED COLS FROMT EH TABLE SO THERE
IS TABLE COL MISMATCH HENCE WHILE ENTERING THE DATA THERE IS SQL ISSUE: SOLUTION:
Enable Schema Auto-Update with spring.jpa.hibernate.ddl-auto=update
ALS0: Hibernate does not remove unused columns for safety — to avoid accidental data loss.

- \du IN POSTGRES TO GET LIST OF ROLES

- psql -U postgres -h localhost -p 5433 -d postgres
- user: postgres - password: root

- UNINSTALLED POSTGRES
- DOWNLOADED PG ADMIN AGAIN AND DOWNLOADED LIQUIBASE

- SUCCESSFULLY RAN LIQUIBASE BUT AFTER RESOLVING SOME ISSUES

- FOR THE FIRST TIME JUST TAKE A GIT PULL AND THEN PUSH WHEN ADDING REMOTE ORIGIN FOR GIT

- CAREFUL TO ADD SETTER FOR ALL VARIABLES IN THE SERVICE IMPL CLASS

- SOMETIMES PGADMIN DOES NOT RUN THE POSTGRES SERVER SO DO THE FOLLOWING MANUALLY:
Open Services:

Press Win + R → type services.msc → hit Enter.

Look for PostgreSQL (like postgresql-x64-15, postgresql-14, etc.).

If you see it:

Check its status → if it’s not running, right-click → Start.

- ALTER TABLE financial_entity DROP CONSTRAINT financial_entity_company_type_check;

DEPLOYING APP IN AWS:
- <finalName>invesco-fintech-aws-exe</finalName> IN POM.XML


KT:
Absolutely, Shilpi.
I’ll guide you through the realistic end-to-end flow of how junior developers in most companies
deploy a Spring Boot app to AWS, step by step — from coding in IntelliJ to deploying on EC2,
possibly using S3 and Docker.

- RUN THE APP LOCALLY: mvn spring-boot:run

- WHILE LAUNCHING A NEW EC2 INSTANCE I MIGHT GET AN ERROR:
"This account cannot launch T2 instances with Unlimited enabled...”"
This error means that your AWS account doesn’t currently have permission to launch t2. instances with
“Unlimited” mode enabled* — which is AWS’s default behavior now.

- TERMINATE THE INSTANCE  ELSE WILL BE CHARGED FOR THE EBS VOL

- USE PLACEHOLDERS IN LOG WITH SLF4J

- ALWAYS HANDLE NPE(S)

DOCKERFILE

- RAN COMAMND :C:\Users\Shilpi Mazumdar\Desktop\imp_desktop_folders\co_product_prep\2025\revision_springboot-projects\invesco-fintech> docker build -t invesco-fintech-aws-exe.jar .
IN THE DOCKER DESKTOP TERMINAL
- docker image ls
- INSTEAD OF RUNNING JUST THE APP WITH THIS: docker run -p 6868:8686 invesco-fintech-aws-exe.jar
THIS DOES NOT USE DOCKER COMPOSE YML FILE SO >>>
 >>> SPIN UP ALL THE CONTAINERS:


 FINAL STEPS:
 RUN >>> docker build -t invesco-fintech-aws-exe.jar
 RUN >>> docker-compose up --build
- incomplete


UNIT TESTING: MOCKITO

